---
layout: post
title: "#RuPy 2009"
summary: |
  Last weekend I took part in [RuPy](http://rupy.eu  "Visit offical RuPy website") --- a 'strongly dynamic conference' about Ruby, Python and related technologies. Even though I don't use these languages in my everyday programming work I really enjoy trying them in my side-projects, so I found some points from RuPy's agenda quite interesting.

  This post is meant to be a summary of my RuPy experiences --- for me to remember what I've learnt and for anyone who has been on this conference and/or considers taking part in it next year.
---

![RuPy 2009](http://dl.dropbox.com/u/2801566/blog/img/rupy2009.png)


### What I've seen

To be honest I didn't put my expectations very high (I guess it's because I'm not really deep into Ruby/Python world) but I really found some speeches surprisingly interesting. I don't want to run through whole agenda here, so let me just list some of them.


#### The Ruby Guide to \*nix Plumbing

Even though it was quite hard-core for such an early hour in the Saturday morning, Eleanor McHugh opened conference with an amazing and amusing speech about (very) low level UNIX 'plumbing' in Ruby.

You may think that you use high-level dynamic language like Ruby not to think about memory pointers and system calls, but it's really great to have a possibility of taking advantage of native C libraries if you need to optimize your Ruby application. On the other hand in the case when you have to develop something around existing C library you are not doomed to old-school C coding anymore, as you can simply wrap it with Ruby and code in your beloved language.

If you want to taste a bit of this speech, check [the "The Ruby Guide to \*nix Plumbing" slides](http://www.slideshare.net/feyeleanor/the-ruby-guide-to-nix-plumbing-on-the-quest-for-efficiency-with-ruby-mkri "See "The Ruby Guide to *nix Plumbing" slides").


#### MongoDB

Another nice surprise was an introduction to [MongoDB](http://www.mongodb.org "Visit MongoDB official website") by Michael Dirolf. What I expected was some boring yet-another-database-engine stuff. What it turned out to be was very interesting presentation about (*buzz warning!*) open-source, high-performance, schema-free, document-oriented database.

As a developer used to living in the word of JavaScript and JSON I really like highly dynamic nature of MongoDB, and the fact that is has a build-in JavaScript engine for scripting queries, made me instantly love it. That's why I got really exited about "Rapid Application Development with Ruby on Rails and MongoDB" presentation planned for next day.

If you want to get exited to, check [Michael's MongoDB slides](http://www.slideshare.net/mdirolf/mongodb-at-rupy "See 'MongoDB at RuPy' slides").


#### Mastering Git

Because we started to actively use [Git](http://git-scm.com "Visit official Git website") as version control system for [Taskboard](http://taskboard.cognifide.com "Visit official Taskboard website") project, I was really interested in "Mastering Git" talk by Scott Chacon and I wasn't disappointed.

After over 6 month of using Git I probably didn't need a beginners introduction, but it was nice to see some real numbers comparing performance of Git against SVN. Scott also presented some advanced 'ninja' features of Git such as `rebase` or `bisect` commands, that may be useful in case of some emergency. And, what I'm really proud of, we can honestly say that we very effectively use Git's branching in our kanban process of developing Taskboard (and maybe that's a good candidate for a blog post in some future).

There are no slides from this talk on [Scott's SlideShare profile](http://www.slideshare.net/chacon "Visit Scott's Chacon SlideShare profile") but you can find a lot about Git in his 'open-source' ["Pro Git" book](http://progit.org "Visit "ProGit" book website").


### What I haven't seen

As I said somewhere before, I didn't put my RuPy expectations high, but there where some talks I really wanted to see and (unfortunately) I couldn't. Not even because of the conflicts between two parallel sessions on a conference, but as a result of a flu season.

One of those was presentation of testing [Ruby on Rails](http://rubyonrails.org/ "Visit Ruby on Rails website") applications with [Cucumber](http://cukes.info/ "Visit Cucumber website") and [Webrat](http://github.com/brynary/webrat "See Webrat on GitHub") frameworks. As recently I started to be a big fan of [BDD](http://en.wikipedia.org/wiki/Behavior_Driven_Development "Read about Behavior Driven Development on Wikipedia") approach, it was my number one of RuPy's talks. Unfortunately that was the one that dissapeared from agenda few days before the conference, because [speaker got ill](http://twitter.com/TheDeadSerious/status/5417512703).

And another talk was a really cursed one. Obie Fernandez was to talk about developing in Ruby on Rails with MongoDB. [He couldn't make it](http://twitter.com/obie/status/5420430614), but got replaced by Durran Jordan, who made it to Pozna≈Ñ, but he also sick and didn't appear on RuPy. It was a big disappointment, as after an introduction on Saturday I really wanted to see MongoDB in action.



### What I've got

For sure it was not a wasted weekend. Especially because of the food ;) and a RuPy T-shirt I won in a really geeky contest (recognizing PC parts with covered eyes --- I was lucky to get some ancient ethernet controller).

However I'm not really sure if I'll go to RuPy next year. I guess it will depend on how my interests in dynamic languages evolve and what speeches will appear in their agenda.

